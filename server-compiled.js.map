{"version":3,"sources":["server.js"],"names":[],"mappings":";;AAAA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,SAAS,QAAQ,qBAAR,CAAb;;AAEA,IAAI,WAAW,QAAQ,MAAR,CAAf;;AAEA,IAAI,gBAAgB;AAChB,iBAAa,OAAO,GADJ;AAEhB,cAAU,IAFM;AAGhB,SAAK,IAHW;AAIhB,WAAO,IAJS;AAKhB,aAAS,IALO;AAMhB,gBAAY,OAAO,GANH;AAOhB,aAAS,EAAE,+BAA+B,GAAjC,EAPO;AAQhB,wBAAoB,IARJ;AAShB,WAAO;AACH,gBAAQ,IADL;AAEH,sBAAc,IAFX;AAGH,gBAAQ,IAHL;AAIH,sBAAc,KAJX;AAKH,gBAAQ,IALL;AAMH,cAAM,KANH;AAOH,iBAAS,IAPN;AAQH,iBAAS,IARN;AASH,iBAAS;AATN;AATS,CAApB;;AAsBA,IAAI,MAAM,IAAI,OAAJ,EAAV;AACA,IAAI,GAAJ,CAAQ,QAAQ,wBAAR,EAAkC,QAAlC,EAA4C,aAA5C,CAAR;AACA,IAAI,GAAJ,CAAQ,QAAQ,wBAAR,EAAkC,QAAlC,CAAR;AACA,IAAI,GAAJ,CAAQ,QAAQ,MAAR,CAAe,OAAO,OAAtB,CAAR;AACA,IAAI,GAAJ,CAAQ,GAAR,EAAa,UAAC,GAAD,EAAM,GAAN,EAAc;AACvB,QAAI,QAAJ,CAAa,KAAK,OAAL,CAAa,OAAO,OAApB,EAA6B,YAA7B,CAAb;AACH,CAFD;;AAIA,IAAI,MAAJ,CAAW,OAAO,IAAlB,EAAwB,SAAS,cAAT,CAAwB,GAAxB,EAA6B;AACjD,QAAI,GAAJ,EAAS;AACL,gBAAQ,KAAR,CAAc,GAAd;AACH,KAFD,MAEO;AACH,gBAAQ,IAAR,CAAa,2CAAb,EAA0D,OAAO,GAAjE;AACH;AACJ,CAND;;;;;;;;kCAhCI,Q;;kCAEA,a;;kCAsBA,G","file":"server-compiled.js","sourcesContent":["var express = require('express');\nvar webpack = require('webpack');\nvar path = require('path');\nvar config = require('./webpack.config.js');\n\nvar compiler = webpack(config);\n\nvar serverOptions = {\n    contentBase: config.URL,\n    progress: true,\n    hot: true,\n    watch: true,\n    verbose: true,\n    publicPath: config.URL,\n    headers: { 'Access-Control-Allow-Origin': '*' },\n    historyApiFallback: true,\n    stats: {\n        cached: true,\n        cachedAssets: true,\n        chunks: true,\n        chunkModules: false,\n        colors: true,\n        hash: false,\n        reasons: true,\n        timings: true,\n        version: false\n    }\n};\n\nvar app = new express();\napp.use(require('webpack-dev-middleware')(compiler, serverOptions));\napp.use(require('webpack-hot-middleware')(compiler));\napp.use(express.static(config.context));\napp.get('*', (req, res) => {\n    res.sendFile(path.resolve(config.context, 'index.html'));\n});\n\napp.listen(config.PORT, function onAppListening(err) {\n    if (err) {\n        console.error(err);\n    } else {\n        console.info('Webpack development server progress... %s', config.URL);\n    }\n});\n"]}